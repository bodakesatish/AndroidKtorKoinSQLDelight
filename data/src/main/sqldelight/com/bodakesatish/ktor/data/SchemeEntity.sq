CREATE TABLE SchemeEntity (
    schemeCode INTEGER NOT NULL PRIMARY KEY, -- Using INTEGER for schemeCode as it's an ID
    schemeName TEXT NOT NULL,
--     isinGrowth TEXT, -- Nullable as per your data class
--     isinDivReinvestment TEXT, -- Nullable
    lastFetched INTEGER NOT NULL -- Timestamp to know when data was last updated
);
-- SQLDelight will generate Kotlin functions based on these queries

-- Get all schemes
selectAll:
SELECT *
FROM SchemeEntity
ORDER BY schemeName ASC;

-- Get a specific scheme by its code
selectByCode:
SELECT *
FROM SchemeEntity
WHERE schemeCode = :schemeCode;

-- Insert a new scheme or replace if it already exists (based on schemeCode)
insertOrReplace:
INSERT OR REPLACE INTO SchemeEntity(schemeCode, schemeName, lastFetched)--, isinGrowth, isinDivReinvestment, lastFetched)
VALUES (?, ?,?);--, ?, ?, ?);

-- Insert a new scheme or replace if it already exists (based on schemeCode)
insertTenSchemes:
INSERT OR REPLACE INTO SchemeEntity(schemeCode, schemeName, lastFetched)
VALUES
    (:schemeCode1, :schemeName1, :lastFetched1),
    (:schemeCode2, :schemeName2, :lastFetched2),
    (:schemeCode3, :schemeName3, :lastFetched3),
    (:schemeCode4, :schemeName4, :lastFetched4),
    (:schemeCode5, :schemeName5, :lastFetched5),
    (:schemeCode6, :schemeName6, :lastFetched6),
    (:schemeCode7, :schemeName7, :lastFetched7),
    (:schemeCode8, :schemeName8, :lastFetched8),
    (:schemeCode9, :schemeName9, :lastFetched9),
    (:schemeCode10, :schemeName10, :lastFetched10);


-- Delete all schemes (useful for refreshing cache)
deleteAll:
DELETE FROM SchemeEntity;

-- Count of schemes (example utility query)
count:
SELECT COUNT(*) FROM SchemeEntity;